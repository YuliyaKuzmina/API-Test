{
	"info": {
		"_postman_id": "bdbc13c3-5651-41aa-81d8-db49438d195e",
		"name": "Fake REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29937764",
		"_collection_link": "https://qa21-kuzz.postman.co/workspace/Team-Workspace~b9cf324d-8060-4b2c-8052-c942996cfeef/collection/29937764-bdbc13c3-5651-41aa-81d8-db49438d195e?action=share&source=collection_link&creator=29937764"
	},
	"item": [
		{
			"name": "Activities",
			"item": [
				{
					"name": "Тест 10 - Проверка корректности кода",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 11 - Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test 11\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[4]).to.contains({\r",
									"        \"id\": 5,\r",
									"        \"title\": \"Activity 5\",\r",
									"        \"completed\": false\r",
									"    });    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 12 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"    \r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"pm.test(\"Transfer-Encoding is present\", function () {\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 14 - Получение списка активностей",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 18 - Получение списка активностей неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "OPTIONS",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 19 - отправление новых активностей",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{activity_id}},\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities"
							]
						},
						"description": "test 21,26"
					},
					"response": []
				},
				{
					"name": "Тест 22 - Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Создание новой сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"activity_id\"),\r",
									"        \"title\": \"string\",\r",
									"        \"completed\": true\r",
									"    });\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{activity_id}},\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Activities",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 23 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{activity_id}},\r\n    \"title\": \"string\",\r\n    \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n    \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 25 - Создание новых активностей с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bad Request POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": ,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activitis",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activitis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 26 - Создание новой активности неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{activity_id}},\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 27 - Получение списка созданных сущностей по id.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/{{activity_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"{{activity_id}}"
							]
						},
						"description": "test 14"
					},
					"response": []
				},
				{
					"name": "Тест 28 - Получение списка активностей по неверному id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Not Found GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/5999999",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"5999999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 29 - Получение списка активностей по id неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Method Not Allowd GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([405]);\r",
									"});\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/8",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 30 - Создание новых активностей - дублирование",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 409]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{activity8_id}},\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 31 - создание новой активности: неполная модель",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"dueDate\": \r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 33 - Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test 33\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"activity_real_id\"),\r",
									"        \"title\": \"Activity 5\",\r",
									"        \"completed\": false\r",
									"    });    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities/{{activity_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities",
								"{{activity_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 34 - Проверка заголовков по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\"https://fakerestapi.azurewebsites.net/api/v1/Activities\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/4",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 37 - Обновление списка активностей по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка обновления сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": 15,\r",
									"        \"title\": \"read\",\r",
									"        \"completed\": true\r",
									"    });    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 15,\r\n  \"title\": \"read\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/15",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 53 - Проверка корректности кода по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 3,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/3",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 54- Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test 54\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"activity_real_id\"),\r",
									"        \"title\": \"read\",\r",
									"        \"completed\": true\r",
									"    });    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{activity_real_id}},\r\n  \"title\": \"read\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Activities/{{activity_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities",
								"{{activity_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 55- Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{activity8_id}},\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/{{activity8_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"{{activity8_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 57- Обновление списка активностей с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": ,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/{{activity8_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities",
								"{{activity8_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 58- Обновление списка активностей неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "HEAD",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 5,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 60 - Удаление активностей по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities/{{activity_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities",
								"{{activity_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 61 - Проверка корректности кода по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 63- Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"аpi-supported-versions is present\", function () {\r",
									"    pm.response.to.have.header(\"api-supported-versions\");\r",
									"});\r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"pm.test(\"Server is present\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities/18",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities",
								"18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 65 - Удаление активностей с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities/123",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 66 - Удаление активностей неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{url}}/Activities/{{activity_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Activities",
								"{{activity_real_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authors",
			"item": [
				{
					"name": "Тест 39 - Получение списка авторов",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Authors",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 40 - Проверка корректности кода",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Authors",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 41 - Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 42 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 43 - Проверка базовой работоспособности",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 44 - Получение списка авторов неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "OPTIONS",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 45 - Отправление новых  авторов",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 46 - Смена типа передаваемых данных",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 47 - Проверка корректности кода",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 48 - Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 49 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 50 - Проверка базовой работоспособности",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 51 - Создание новых авторов с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": ,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 52 - Создание новых авторов неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 195 - Получение списка авторов по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/5",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 196 - Получение списка авторов по id с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/8345678876586",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"8345678876586"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 197 - Получение списка авторов по id неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/5",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 198 - Создание новых авторов - дублирование",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 15,\n  \"idBook\": 0,\n  \"firstName\": \"string\",\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 199 - Создание новых авторов - неполная модель",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": ,\n  \"lastName\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 200 - Проверка корректности кода по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/5",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 201 - Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/5",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 202 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/7",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 203 - Проверка базовой работоспособности по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/5",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 204 - Получение списка авторов по неверному id: производительность",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/8909999800",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"8909999800"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 205 - Обновление списка авторов по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 3,\n  \"idBook\": 2,\n  \"firstName\": \"First Name 2\",\n  \"lastName\": \"Last Name 2\",\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/3",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 206 - Смена типа передаваемых данных по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 2,\n  \"idBook\": 2,\n  \"firstName\": \"First Name 2\",\n  \"lastName\": \"Last Name 2\",\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/2",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 207 - Проверка корректности кода по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 3,\n  \"idBook\": 2,\n  \"firstName\": \"First Name 2\",\n  \"lastName\": \"Last Name 2\",\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/3",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 208 - Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 11,\n  \"idBook\": 2,\n  \"firstName\": \"First Name 2\",\n  \"lastName\": \"Last Name 2\",\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/11",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 209 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 8,\n  \"idBook\": 2,\n  \"firstName\": \"First Name 2\",\n  \"lastName\": \"Last Name 2\",\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/8",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 210 - Проверка базовой работоспособности по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 10,\n  \"idBook\": 2,\n  \"firstName\": \"First Name 2\",\n  \"lastName\": \"Last Name 2\",\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/10",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 211 - Обновление списка авторов с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": ,\n  \"idBook\": 2,\n  \"firstName\": \"First Name 2\",\n  \"lastName\": \"Last Name 2\",\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/9",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 212 - Обновление списка авторов неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "HEAD",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"idBook\": 2,\n  \"firstName\": \"First Name 2\",\n  \"lastName\": \"Last Name 2\",\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/9",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 213 - Обновление списка авторов - неполная модель запроса",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"idBook\": 2,\n  \"firstName\": ,\n  \"title\": \"Book 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/Authors/23",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"23"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 214 - Удаление авторов по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/25",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"25"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 215 - Проверка корректности кода по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/3",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 216 - Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/18",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 217 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/18",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 218 - Проверка базовой работоспособности по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/15",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 219 - Удаление авторов с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/5500000000",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"5500000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 220 - Удаление авторов неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "OPTIONS",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/15",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 225 - Проверка корректности кода по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/32",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"32"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 226 - Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/33",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"33"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 227 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/33",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"33"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 228 - Проверка базовой работоспособности по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/14",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 229 - Получение объекта книги по id с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/15330000000",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"15330000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 230 - Получение объекта книги автора по id неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/14",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 231 - Получение объекта книги автора по неверному id: производительность",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/8909999800",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"8909999800"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 224 - Получение данных объекта авторов по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/Authors/authors/books/31",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"Authors",
								"authors",
								"books",
								"31"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "Тест 68 - Получение списка книг",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 69 - Проверка корректности кода",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 75 - Проверка нагрузки ответа",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Тест 76 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"    \r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"pm.test(\"Transfer-Encoding is present\", function () {\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 78 - Получение списка книг с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "OPTIONS",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 80 - Отправление нового списка книг",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"title\": \"string\",\r\n  \"description\": \"string\",\r\n  \"pageCount\": 0,\r\n  \"excerpt\": \"string\",\r\n  \"publishDate\": \"2023-09-24T13:11:39.024Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 83 - Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Создание новой сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"activity_id\"),\r",
									"        \"title\": \"string\",\r",
									"        \"completed\": true\r",
									"    });\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{book_id}},\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 84 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{book_id}},\r\n    \"title\": \"string\",\r\n    \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n    \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 85 - Создание нового списка книг с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bad Request POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": ,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 86 - Создание новой книги  неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{book_id}},\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books{{books_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books{{books_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 87 - Получение списка созданных книг по id.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books{{books_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books{{books_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 91 - Получение списка книг по неверному id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Not Found GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books{{books_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books{{books_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 93 - Получение списка книг по id с неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Method Not Allowd GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([405]);\r",
									"});\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books{{books_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books{{books_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 99 - Создание нового списка книг - дублирование",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 105 - Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test 33\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"activity_real_id\"),\r",
									"        \"title\": \"Activity 5\",\r",
									"        \"completed\": false\r",
									"    });    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/{{book_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"{{book_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 113 - Проверка заголовков по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\"https://fakerestapi.azurewebsites.net/api/v1/Activities\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/4",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 234 - Обновление списка книг по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка обновления сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": 15,\r",
									"        \"title\": \"read\",\r",
									"        \"completed\": true\r",
									"    });    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"title\": \"string\",\r\n  \"description\": \"string\",\r\n  \"pageCount\": 0,\r\n  \"excerpt\": \"string\",\r\n  \"publishDate\": \"2023-09-25T08:03:55.894Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/15",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 235 -  Проверка корректности кода по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 3,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/3",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 237 - Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test 54\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"activity_real_id\"),\r",
									"        \"title\": \"read\",\r",
									"        \"completed\": true\r",
									"    });    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{book_real_id}},\r\n  \"title\": \"read\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/{{activity_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"{{activity_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 238 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{book8_id}},\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/{{activity8_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"{{activity8_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 239 - Обновление списка книг с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": ,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/{{activity8_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"{{activity8_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 240 - Обновление списка книг неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "HEAD",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 5,\r\n  \"title\": \"string\",\r\n  \"dueDate\": \"2023-09-22T05:54:10.236Z\",\r\n  \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 244 - Проверка корректности кода по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/3",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 246 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"аpi-supported-versions is present\", function () {\r",
									"    pm.response.to.have.header(\"api-supported-versions\");\r",
									"});\r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"pm.test(\"Server is present\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/18",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 247 - Удаление списка книг по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/{{activity_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"{{activity_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 248 - Удаление списка книг с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/{{books_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"{{books_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 249 - Удаление списка книг неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/{{activity_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"{{activity_real_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CoverPhotos",
			"item": [
				{
					"name": "Тест 88 - Получение списка фото для обложки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/CoverPhotos",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 90 - Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test 90\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[1]).to.contains({\r",
									"        \"id\": 2,\r",
									"        \"idBook\": 2,\r",
									"        \"url\": \"https://placeholdit.imgix.net/~text?txtsize=33&txt=Book 2&w=250&h=350\"\r",
									"    });    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 700ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/CoverPhotos",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 94 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"    \r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"pm.test(\"Transfer-Encoding is present\", function () {\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/CoverPhotos",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 96 - Получение списка фото для обложки неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "OPTIONS",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/CoverPhotos",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 97- отправление новых сущностей фото для обложки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{cover_id}},\r\n  \"idBook\": 0,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos"
							]
						},
						"description": "test 21,26"
					},
					"response": []
				},
				{
					"name": "Тест 101- Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Создание новой сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"cover_id\"),\r",
									"        \"idBook\": 0,\r",
									"        \"url\": \"string\"\r",
									"    });\r",
									"});\r",
									"pm.test(\"Response time is less than 6000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{cover_id}},\r\n  \"idBook\": 0,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/CoverPhotos",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 102 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{cover_id}},\r\n  \"idBook\": 0,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 106 - Создание нового объекта фото для обложки с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bad Request POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{cover_id}},\r\n  \"idBook\": 0,\r\n  \"url\":\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 107 - Создание нового объекта фото для обложки неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"idBook\": 0,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 108 - Создание нового объекта фото для обложки - дублирование",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 409]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 3,\r\n  \"idBook\": 3,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 109- создание нового объекта фото для обложки: неполная модель",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 110 - Получение списка новых созданных сущностей по id.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos/{{cover_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos",
								"{{cover_id}}"
							]
						},
						"description": "test 14"
					},
					"response": []
				},
				{
					"name": "Тест 112 - Проверка нагрузки ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Получение сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"cover_real_id\"),\r",
									"        \"idBook\": 10,\r",
									"        \"url\": \"https://placeholdit.imgix.net/~text?txtsize=33&txt=Book 10&w=250&h=350\"\r",
									"    });\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/CoverPhotos/{{cover_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 115 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos/{{cover_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 118 - Получение объекта фото для обложки по неверному id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Not Found GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos/5999999",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos",
								"5999999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 119 - Получение объекта фото для обложки по id неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "OPTIONS",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/CoverPhotos/{{cover_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 121- Получение данных объекта обложки книг по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos/{{cover_foto_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos",
								"{{cover_foto_id}}"
							]
						},
						"description": "test 21,26"
					},
					"response": []
				},
				{
					"name": "Тест 121- Получение данных объекта обложки книг по id баг",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos/books/covers/230",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos",
								"books",
								"covers",
								"230"
							]
						},
						"description": "test 21,26"
					},
					"response": []
				},
				{
					"name": "Тест 129 - Обновление списка фото для обложек по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка обновления сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.environment.get(\"cover_real_id\"),\r",
									"        \"idBook\": +pm.environment.get(\"cover_real_id\"),\r",
									"        \"url\": \"string\"\r",
									"    });    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{cover_real_id}},\r\n  \"idBook\": \"10\",\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos/{{cover_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 132- Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test 132\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"        \"id\": +pm.variables.get(\"cover_real_id\"),\r",
									"        \"idBook\": 10,\r",
									"        \"url\": \"string\"\r",
									"    });    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{cover_real_id}},\r\n  \"idBook\": 10,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/CoverPhotos/{{cover_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 133 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{cover_real_id}},\r\n  \"idBook\": 10,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos/{{cover_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 135 - Обновление списка активностей с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{cover_real_id}}\r\n  \"idBook\": {{cover_real_id}},\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos/{{cover_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 136 - Обновление списка активностей неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "HEAD",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 10,\r\n  \"idBook\": 10,\r\n  \"url\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/CoverPhotos",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"CoverPhotos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 138 - Удаление объектов фото для обложки по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/CoverPhotos/{{cover_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos",
								"{{cover_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 141 - Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"аpi-supported-versions is present\", function () {\r",
									"    pm.response.to.have.header(\"api-supported-versions\");\r",
									"});\r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"pm.test(\"Server is present\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Response time is less than 700ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/CoverPhotos/{{cover_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 143 - Удаление объекта фото для обложки с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/CoverPhotos/203",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos",
								"203"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 144 - Удаление объекта фото для обложки неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([405]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{url}}/CoverPhotos/{{cover_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"CoverPhotos",
								"{{cover_real_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Тест 152 - Получение списка пользователей",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Users",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 154 - Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test 154\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[2]).to.contains({\r",
									"    \"id\": 3,\r",
									"    \"userName\": \"User 3\",\r",
									"    \"password\": \"Password3\"\r",
									"  });    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Users",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 155 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"    \r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"pm.test(\"Transfer-Encoding is present\", function () {\r",
									"    pm.response.to.have.header(\"Transfer-Encoding\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Users",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 157 - Получение списка пользователей неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "OPTIONS",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Users",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 158 - Создание новых пользователей",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{user_id}},\r\n    \"userName\": \"User {{user_id}}\",\r\n    \"password\": \"Password{{user_id}}\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Users"
							]
						},
						"description": "test 21,26"
					},
					"response": []
				},
				{
					"name": "Тест 161 - Проверка нагрузки ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Создание новой сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains(\r",
									"    {\"id\":  +pm.variables.get(\"user_real_id\"),\r",
									"    \"userName\": \"User \" + pm.variables.get(\"user_real_id\"),\r",
									"    \"password\": \"Password\" + pm.variables.get(\"user_real_id\")})\r",
									"});\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{user_real_id}},\r\n    \"userName\": \"User {{user_real_id}}\",\r\n    \"password\": \"Password{{user_real_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Users",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 162 - Проверка заголовков ответа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{user_real_id}},\r\n    \"userName\": \"User {{user_real_id}}\",\r\n    \"password\": \"Password{{user_real_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 164 - Создание новых пользователей с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bad Request POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 3,\r\n    \"userName\": \"User 3\",\r\n    \"password\": \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 168 - Проверка создания нового пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const res = pm.response.json();\r",
									"const activity_id = res.id;\r",
									"pm.environment.set(\"user_id\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{user_id}},\r\n    \"userName\": \"User {{user_id}}\",\r\n    \"password\": \"Password{{user_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Users"
							]
						},
						"description": "test 21,26"
					},
					"response": []
				},
				{
					"name": "Тест 169 - Получение списка пользователей по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/Users/{{user_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users",
								"{{user_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 174 - Получение сущности пользователя по неверному id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Not Found GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});\r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users/12",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Users",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 175 - Получение сущности пользователя по id неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "OPTIONS",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Users/{{user_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users",
								"{{user_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 177 - Обновление списка пользователей по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка обновления сущности\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.contains({\r",
									"    \"id\": +pm.environment.get('user_real_id'),\r",
									"    \"userName\": \"SuperUser \" + pm.environment.get('user_real_id'),\r",
									"    \"password\": \"Password\" + pm.environment.get('user_real_id')\r",
									"    });    \r",
									"});\r",
									" \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{user_real_id}},\r\n    \"userName\": \"SuperUser {{user_real_id}}\",\r\n    \"password\": \"Password{{user_real_id}}\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users/{{user_real_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Users",
								"{{user_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 183 - Обновление списка пользователей с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{user_id}}\r\n    \"userName\": \"User {{user_id}}\",\r\n    \"password\": \"Password{{user_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users/{{user_id}}",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 187- Удаление объектов пользователей по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Users/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 190- Проверка заголовков ответа по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"аpi-supported-versions is present\", function () {\r",
									"    pm.response.to.have.header(\"api-supported-versions\");\r",
									"});\r",
									"pm.test(\"Date is present\", function () {\r",
									"    pm.response.to.have.header(\"Date\");\r",
									"});\r",
									"pm.test(\"Server is present\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"});\r",
									"pm.test(\"X-Powered-By is not present\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Response time is less than 700ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Users/{{user_real_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users",
								"{{user_real_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 192 - Удаление пользователя с неверными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Users/203",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users",
								"203"
							]
						}
					},
					"response": []
				},
				{
					"name": "Тест 193 - Удаление объекта пользователя неверным методом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([405]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{url}}/Users/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}